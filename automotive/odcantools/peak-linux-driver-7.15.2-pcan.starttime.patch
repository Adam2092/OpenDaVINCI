diff -Naur peak-linux-driver-7.15.2/driver/src/pcan_main.c ../t2/peak-linux-driver-7.15.2/driver/src/pcan_main.c
--- peak-linux-driver-7.15.2/driver/src/pcan_main.c	2015-01-28 17:17:32.000000000 +0100
+++ ../t2/peak-linux-driver-7.15.2/driver/src/pcan_main.c	2016-10-07 16:27:52.041790842 +0200
@@ -57,6 +57,11 @@
 
 // #define KBUILD_MODNAME pcan
 
+/* Propagate start time to /proc/pcan.starttime */
+#include <linux/fs.h>
+#include <linux/proc_fs.h>
+#include <linux/seq_file.h>
+
 #include <linux/kernel.h>   // DPRINTK()
 #include <linux/slab.h>     // kmalloc()
 #include <linux/fs.h>       // everything...
@@ -121,6 +126,25 @@
 // the global driver object, create it
 struct driverobj pcan_drv = {};
 
+static struct proc_dir_entry* pcan_starttime_file;
+static int pcan_starttime_show(struct seq_file *m, void *v) {
+	seq_printf(m, "%llu.%llu\n", (unsigned long long)pcan_drv.sInitTime.tv_sec, (unsigned long long)pcan_drv.sInitTime.tv_usec);
+	return 0;
+}
+
+static int pcan_starttime_open(struct inode *inode, struct file *file) {
+	return single_open(file, pcan_starttime_show, NULL);
+}
+
+static const struct file_operations pcan_starttime_fops = {
+	.owner	= THIS_MODULE,
+	.open	= pcan_starttime_open,
+	.read	= seq_read,
+	.llseek	= seq_lseek,
+	.release	= single_release,
+};
+
+
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
 //----------------------------------------------------------------------------
 // some stuff to support SysFS coming with kernel 2.6
@@ -674,6 +698,8 @@
 		pcan_drv.wInitStep = 0;
 	}
 
+	remove_proc_entry("pcan.starttime", NULL);
+
 	printk(KERN_INFO "%s: removed.\n", DEVICE_NAME);
 }
 
@@ -889,6 +915,12 @@
 
 	printk(KERN_INFO "%s: major %d.\n", DEVICE_NAME, pcan_drv.nMajor);
 
+	/* Create /proc/pcan.starttime entry*/
+	pcan_starttime_file = proc_create("pcan.starttime", 0, NULL, &pcan_starttime_fops);
+	if (!pcan_starttime_file) {
+		return -ENOMEM;
+	}
+
 	/* succeed */
 	return 0;
 
