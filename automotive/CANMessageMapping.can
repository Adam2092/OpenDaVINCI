using AutomotiveData;

wheelspeed.frontleft	in 0x123 at bit 0 for 16 bit is little endian multiply by 0.01 add 0 with range [0, 200];
wheelspeed.frontright	in 0x123 at bit 16 for 2 bytes is little endian multiply by 0.01 add 0 with range [0, 200];
wheelspeed.rearleft 	in 0x123 at bit 32 for 2 byte is little endian multiply by 0.01 add 0 within range [0, 200];
wheelspeed.rearright	in 0x123 at bit 48 for 16 bits is little endian multiply by 0.01 add 0 within range [0, 200];
lightsystem.headlights  in 0x001 at bit 6 for 2 bits is big endian multiply by 1 add 0 within range [0, 3];

// CAN message for reading the vehicle dynamics.
vehicledynamics.yawrate in 0x104 at bit 32 for 16 bit is little endian multiply by 0.000122 add -3.92 with range [-3.92, 4.07527];
vehicledynamics.acceleration_y in 0x104 at bit 16 for 16 bit is little endian multiply by 0.00048828125 add -15.687 with range [-15.687, 16.31251171875];
vehicledynamics.acceleration_x in 0x104 at bit 0 for 16 bit is little endian multiply by 0.00048828125 add -15.687 with range [-15.687, 16.31251171875];

mapping automotive.vehicle.WheelSpeed {
	wheelspeed.frontleft : 1;
	wheelspeed.frontright : 2;
	wheelspeed.rearleft : 3;
	wheelspeed.rearright : 4;
}

unordered mapping automotive.vehicle.LightSystem {
    lightsystem.headlights : 1;
}

mapping EmptyCanMessage {
}

unordered mapping opendlv.gcdc.fh16.VehicleDynamics {
    vehicledynamics.acceleration_x : 1;
    vehicledynamics.acceleration_y : 2;
    vehicledynamics.yawrate : 3;
}

test automotive.vehicle.WheelSpeed {
  0x123: 0x223C2217220D2207
  
  id 1 = 87.64
  id 2 = 87.27
  id 3 = 87.17
  id 4 = 87.11
}

test opendlv.gcdc.fh16.VehicleDynamics {
  0x104: 0x7F7DA77D877D
  id 1 = 0.000012
  id 2 = 0.019543
  id 3 = 0.00047
}

