/*
 * ODVDOpenDLV.odvd - Data structures for Revere's truck.
 * Copyright (C) 2016 Christian Berger
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

message opendlv.Constants [id = 150] {
  const double PI = 3.141592653589793;
  const double DEG2RAD = 0.017453292522222;  // PI/180.0
  const double RAD2DEG = 57.295779513082325; // 1.0 / DEG2RAD;
}

// This message is needed from odcockpit/startstop.
message opendlv.proxy.ControlOverrideState [id = 164] {
  bool isOverridden [id = 1];
}

// This message is needed from odcockpit/startstop.
message opendlv.proxy.ControlState [id = 165] {
  bool isAutonomous [id = 1];
}

// This message is needed from odcockpit/truckmap.
message opendlv.model.Direction [id = 152] {
  float azimuth [id = 1];
  float zenith [id = 2];
}

// This message is needed from odcockpit/truckmap.
message opendlv.perception.Object [id = 181] {
  odcore::data::TimeStamp identified [id = 1];
  string type [id = 2];
  float typeConfidence [id = 3];

  opendlv.model.Direction direction [id = 4];
  float directionConfidence [id = 5];
  opendlv.model.Direction directionRate [id = 6];
  float directionRateConfidence [id = 7];

  float distance [id = 8];
  float distanceConfidence [id = 9];

  float angularSize [id = 10];
  float angularSizeConfidence [id = 11];
  float angularSizeRate [id = 12];
  float angularSizeRateConfidence [id = 13];

  float confidence [id = 14];
  list<string> sources [id = 15];

  list<string> properties [id = 16];

  int16 objectId [id = 17];
}

// This message is needed from odcockpit/truckmap.
message opendlv.perception.Environment [id = 189] {
  odcore::data::TimeStamp validUntil [id = 1];
  list<opendlv.perception.Object> objects [id = 2];
}

// This message broadcasts the system's health as key/values.
message opendlv.system.diagnostics.HealthStatus [id = 200] {
    map<string,string> status [id = 1];
}

